Code Based test SQL 10 september 2023. 2:30PM.
Bhuiyash Kumar


QUESTION 1.
Create a book table with id as primary key and provide the appropriate data type to other attributes .isbn no should be unique for each book

Write a query to fetch the details of the books written by author whose name ends with er.

--Codebased test sql one Bhuiyash Kumar
create database CodebasedTest
use CodebasedTest

create table Books (
    id int primary key,
    title varchar(255),
    author varchar(255),
    isbn varchar(13) unique,
    published_date datetime
)
--value insert
insert into Books (id,title, author, isbn, published_date)
values (1,'My first SQL book', 'Mary Parker', '981483029127', convert(datetime, '2012-02-22 12:08:17', 120));
insert into Books (id,title, author, isbn, published_date)
values (2,'My Second SQL book','John Mayer','857300923713',convert (datetime,'1972-07-03 09:22:45',120)),
	   (3,'My Third SQL book','Cary Flint','523120967812',convert (datetime,'2015-10-18 14:05:44',120))
--display table columns.

	  
	   --create second table:
	   create table reviews (
    id int primary key,
    book_id int,
    reviewer_name varchar(255),
    content varchar(255),
    rating int,
    published_date datetime
);
--insert values:
insert into reviews (id, book_id, reviewer_name, content, rating, published_date)
values (1, 1, 'John Smith','My first review', 4,convert(datetime,'2017-12-10 05:50:11',120))

insert into reviews (id, book_id, reviewer_name, content, rating, published_date)
values (2, 2, 'John Smith', 'My Second review', 5,convert(datetime,'2017-10-13 15:05:12',120)),
		(3, 3, 'Alice Walker','Another review', 1,convert(datetime,'2017-10-22 23:47:10',120))
		 select * from Books

select * from reviews

	   --Given Query 1.
	



   --Write a query to fetch the details of the books written by author whose name ends with er
select b.title, b.author, r.reviewer_name
from Books as b
join reviews as r on b.id = r.book_id
where b.author like '%er';
 --Display the Title ,Author and ReviewerName for all the books from the above table
select b.title, b.author, r.reviewer_name
from Books as b
left join reviews as r on b.id = r.book_id;


OUTPUT:
 

Question Two: 
--Display the reviewer name who reviewed more than one book.

select reviewer_name
from reviews
group by reviewer_name
having count(distinct book_id) > 1;


OUTPUT: 
 



QUESTION 3: 
Display the Name for the customer from above customer table who live in same address which has character o anywhere in address

use CodebasedTest;

create table customers
(ID int primary key,
Name varchar(255),
Age int,
Address varchar(255),
Salary float)


--insert values to customers
insert into customers values
(1,'Ramesh',32,'Ahmedabad',2000.00),
(2,'Khilan',25,'Delhi',1500.00),
(3,'Kaushik',23,'Kota',2000.00),
(4,'Chaitali',25,'Mumbai',6500.00),
(5,'Hardik',27,'Bhopal',8500.00),
(6,'Komal',22,'MP',4500.00),
(7,'Muffy',24,'Indore',10000.00)


--show
select * from customers

--question 3
--Display the Name for the customer from above customer table who live in same address which has character o anywhere in address



select Name
from customers
where address like '%o%';







OUTPUT: 
 


QUESTION 4:

Write a query to display the Date,Total no of customer placed order on same Date
use CodebasedTest;

create table customers
(ID int primary key,
Name varchar(255),
Age int,
Address varchar(255),
Salary float)


--insert values to customers
insert into customers values
(1,'Ramesh',32,'Ahmedabad',2000.00),
(2,'Khilan',25,'Delhi',1500.00),
(3,'Kaushik',23,'Kota',2000.00),
(4,'Chaitali',25,'Mumbai',6500.00),
(5,'Hardik',27,'Bhopal',8500.00),
(6,'Komal',22,'MP',4500.00),
(7,'Muffy',24,'Indore',10000.00)
--show
select * from customers

--create table orders
create table orders
(Order_ID int,
Date Datetime,
Customer_ID int references customers(id),
Amount float)


--insert values to orders
insert into orders values
(102,'2009-10-08',3,3000),
(100,'2009-10-08',3,1500),
(101,'2009-11-20',2,1560),
(103,'2008-05-20',4,2060)


select * from orders

select date, count(distinct customer_id) as total_customers
from orders
group by date
order by date;



OUTPUT:

 



QUESTION 5:
FOR EMPLOYEE TABLE.
use CodebasedTest;

create table employee
(ID int primary key,
Name varchar(255),
Age int,
Address varchar(255),
Salary float)

--insert values to customers
insert into employee values
(1,'Ramesh',32,'Ahmedabad',2000.00),
(2,'Khilan',25,'Delhi',1500.00),
(3,'Kaushik',23,'Kota',2000.00),
(4,'Chaitali',25,'Mumbai',6500.00),
(5,'Hardik',27,'Bhopal',8500.00),
(6,'Komal',22,'MP',null),
(7,'Muffy',24,'Indore',null)
--query for the question employee table.

select lower(name) as lowercase_name
from employee
where salary is null;



OUTPUT:
 

FOR STUDENT TABLE:

-- Create the StudentDetails table
create table StudentDetails (
    RegisterNo INT,
    Name VARCHAR(255),
    Age INT,
    Qualification VARCHAR(50),
    MobileNo VARCHAR(255),
    Mail_id VARCHAR(255),
    Location VARCHAR(255),
    Gen CHAR(2)
);
-- Insert data into the table
INSERT INTO StudentDetails (RegisterNo, Name, Age, Qualification, MobileNo, Mail_id, Location, Gen)
VALUES
(2, 'Sai', 22, 'B.E', 9952836777, 'Sai@gmail.com', 'Chennai', 'M'),
(3, 'Kumar',20, 'BSC', 7890125648, 'Kumar@gmail.com', 'Madurai', 'M'),
(4, 'Selvi', 22, 'B.Tech', 8904567342, 'selvi@gmail.com', 'Selam', 'F'),
(5, 'Nisha', 25, 'M.E', 7834672310, 'Nisha@gmail.com', 'Theni', 'F'),
(6, 'SaiSaran',21, 'B.A', 7890345678, 'saran@gmail.com','Madurai', 'F'),
(7, 'Tom', 23, 'BCA', 8901234675, 'Tom@gmail.com', 'Pune', 'M');

 

-- to display gender and total number of males and females
select 
    Gen as Gender,
    COUNT(*) as Total
from 
    StudentDetails
where 
    Gen is not null
group by 
    Gen;



OUTPUT:
 








